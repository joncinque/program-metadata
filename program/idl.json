{
  "kind": "rootNode",
  "standard": "codama",
  "version": "1.0.0",
  "program": {
    "kind": "programNode",
    "name": "programMetadata",
    "publicKey": "4FX3oHhpAkJcb2tFFrq9JBY8gc4RhCRM5g75VG9QHnj1",
    "version": "0.0.0",
    "pdas": [
      {
        "kind": "pdaNode",
        "name": "canonical",
        "docs": [
          "The canonical derivation for metadata accounts managed by the program authority itself."
        ],
        "seeds": [
          {
            "kind": "variablePdaSeedNode",
            "name": "program",
            "docs": ["The program to which the metadata belongs."],
            "type": { "kind": "publicKeyTypeNode" }
          },
          {
            "kind": "variablePdaSeedNode",
            "name": "seed",
            "docs": ["The seed deriving the metadata account."],
            "type": { "kind": "definedTypeLinkNode", "name": "seed" }
          }
        ]
      },
      {
        "kind": "pdaNode",
        "name": "nonCanonical",
        "docs": [
          "The derivation for metadata accounts managed by third-party authorities."
        ],
        "seeds": [
          {
            "kind": "variablePdaSeedNode",
            "name": "program",
            "docs": ["The program to which the metadata belongs."],
            "type": { "kind": "publicKeyTypeNode" }
          },
          {
            "kind": "variablePdaSeedNode",
            "name": "authority",
            "docs": [
              "The third-party authority managing this metadata account."
            ],
            "type": { "kind": "publicKeyTypeNode" }
          },
          {
            "kind": "variablePdaSeedNode",
            "name": "seed",
            "docs": ["The seed deriving the metadata account."],
            "type": { "kind": "definedTypeLinkNode", "name": "seed" }
          }
        ]
      }
    ],
    "accounts": [
      {
        "kind": "accountNode",
        "name": "buffer",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "discriminator",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "accountDiscriminator"
              },
              "defaultValue": {
                "kind": "enumValueNode",
                "enum": {
                  "kind": "definedTypeLinkNode",
                  "name": "accountDiscriminator"
                },
                "variant": "buffer"
              },
              "defaultValueStrategy": "omitted"
            },
            {
              "kind": "structFieldTypeNode",
              "name": "program",
              "docs": [],
              "type": {
                "kind": "zeroableOptionTypeNode",
                "item": { "kind": "publicKeyTypeNode" }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "authority",
              "docs": [],
              "type": {
                "kind": "zeroableOptionTypeNode",
                "item": { "kind": "publicKeyTypeNode" }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "canonical",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "seed",
              "docs": [],
              "type": {
                "kind": "postOffsetTypeNode",
                "offset": 14,
                "strategy": "padded",
                "type": { "kind": "definedTypeLinkNode", "name": "seed" }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "data",
              "docs": [],
              "type": { "kind": "bytesTypeNode" }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "metadata",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "discriminator",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "accountDiscriminator"
              },
              "defaultValue": {
                "kind": "enumValueNode",
                "enum": {
                  "kind": "definedTypeLinkNode",
                  "name": "accountDiscriminator"
                },
                "variant": "metadata"
              },
              "defaultValueStrategy": "omitted"
            },
            {
              "kind": "structFieldTypeNode",
              "name": "program",
              "docs": [],
              "type": { "kind": "publicKeyTypeNode" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "authority",
              "docs": [],
              "type": {
                "kind": "zeroableOptionTypeNode",
                "item": { "kind": "publicKeyTypeNode" }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "mutable",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "canonical",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "seed",
              "docs": [],
              "type": { "kind": "definedTypeLinkNode", "name": "seed" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "encoding",
              "docs": [],
              "type": { "kind": "definedTypeLinkNode", "name": "encoding" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "compression",
              "docs": [],
              "type": { "kind": "definedTypeLinkNode", "name": "compression" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "format",
              "docs": [],
              "type": { "kind": "definedTypeLinkNode", "name": "format" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "dataSource",
              "docs": [],
              "type": { "kind": "definedTypeLinkNode", "name": "dataSource" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "dataLength",
              "docs": [],
              "type": {
                "kind": "postOffsetTypeNode",
                "offset": 5,
                "strategy": "padded",
                "type": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "data",
              "docs": [],
              "type": { "kind": "bytesTypeNode" }
            }
          ]
        }
      }
    ],
    "instructions": [
      {
        "kind": "instructionNode",
        "name": "write",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "buffer",
            "docs": ["The buffer to write to."],
            "isSigner": false,
            "isWritable": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "docs": ["The authority of the buffer."],
            "isSigner": true,
            "isWritable": false
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValueStrategy": "omitted",
            "defaultValue": { "kind": "numberValueNode", "number": 0 }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "data",
            "docs": [],
            "type": { "kind": "bytesTypeNode" }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "initialize",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "docs": ["Metadata account the initialize."],
            "isSigner": false,
            "isWritable": true,
            "defaultValue": {
              "kind": "conditionalValueNode",
              "condition": {
                "kind": "accountValueNode",
                "name": "programData"
              },
              "ifTrue": {
                "kind": "pdaValueNode",
                "pda": { "kind": "pdaLinkNode", "name": "canonical" },
                "seeds": [
                  {
                    "kind": "pdaSeedValueNode",
                    "name": "program",
                    "value": { "kind": "accountValueNode", "name": "program" }
                  },
                  {
                    "kind": "pdaSeedValueNode",
                    "name": "seed",
                    "value": { "kind": "argumentValueNode", "name": "seed" }
                  }
                ]
              },
              "ifFalse": {
                "kind": "pdaValueNode",
                "pda": { "kind": "pdaLinkNode", "name": "nonCanonical" },
                "seeds": [
                  {
                    "kind": "pdaSeedValueNode",
                    "name": "program",
                    "value": { "kind": "accountValueNode", "name": "program" }
                  },
                  {
                    "kind": "pdaSeedValueNode",
                    "name": "authority",
                    "value": { "kind": "accountValueNode", "name": "authority" }
                  },
                  {
                    "kind": "pdaSeedValueNode",
                    "name": "seed",
                    "value": { "kind": "argumentValueNode", "name": "seed" }
                  }
                ]
              }
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "docs": [
              "Authority (for canonical, must match program upgrade authority)."
            ],
            "isSigner": true,
            "isWritable": false
          },
          {
            "kind": "instructionAccountNode",
            "name": "program",
            "docs": ["Program account."],
            "isSigner": false,
            "isWritable": false
          },
          {
            "kind": "instructionAccountNode",
            "name": "programData",
            "docs": ["Program account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "system",
            "docs": ["System program."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true,
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValueStrategy": "omitted",
            "defaultValue": { "kind": "numberValueNode", "number": 1 }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "seed",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "seed" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "encoding",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "encoding" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "compression",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "compression" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "format",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "format" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataSource",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "dataSource" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "data",
            "docs": [],
            "type": {
              "kind": "remainderOptionTypeNode",
              "item": { "kind": "bytesTypeNode" }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setAuthority",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "docs": ["Metadata account."],
            "isSigner": false,
            "isWritable": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "docs": ["Current authority account."],
            "isSigner": true,
            "isWritable": false
          },
          {
            "kind": "instructionAccountNode",
            "name": "program",
            "docs": ["Program account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "programData",
            "docs": ["Program data account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValueStrategy": "omitted",
            "defaultValue": { "kind": "numberValueNode", "number": 2 }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "newAuthority",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "item": { "kind": "publicKeyTypeNode" },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setData",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "docs": ["Metadata account."],
            "isSigner": false,
            "isWritable": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "docs": ["Authority account."],
            "isSigner": true,
            "isWritable": false
          },
          {
            "kind": "instructionAccountNode",
            "name": "buffer",
            "docs": ["Buffer account to copy data from."],
            "isSigner": false,
            "isWritable": true,
            "isOptional": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "program",
            "docs": ["Program account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "programData",
            "docs": ["Program account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValueStrategy": "omitted",
            "defaultValue": { "kind": "numberValueNode", "number": 3 }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "encoding",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "encoding" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "compression",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "compression" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "format",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "format" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataSource",
            "docs": [],
            "type": { "kind": "definedTypeLinkNode", "name": "dataSource" }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "data",
            "docs": [],
            "type": {
              "kind": "remainderOptionTypeNode",
              "item": { "kind": "bytesTypeNode" }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setImmutable",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "docs": ["Metadata account."],
            "isSigner": false,
            "isWritable": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "docs": ["Authority account."],
            "isSigner": true,
            "isWritable": false
          },
          {
            "kind": "instructionAccountNode",
            "name": "program",
            "docs": ["Program account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          },
          {
            "kind": "instructionAccountNode",
            "name": "programData",
            "docs": ["Program data account."],
            "isSigner": false,
            "isWritable": false,
            "isOptional": true
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValueStrategy": "omitted",
            "defaultValue": { "kind": "numberValueNode", "number": 4 }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      }
    ],
    "definedTypes": [
      {
        "kind": "definedTypeNode",
        "name": "seed",
        "docs": [],
        "type": {
          "kind": "fixedSizeTypeNode",
          "size": 16,
          "type": { "kind": "stringTypeNode", "encoding": "utf8" }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "accountDiscriminator",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "empty"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "buffer"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "metadata"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "encoding",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "utf8"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "base58"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "base64"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "compression",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "gzip"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "zstd"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "format",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "json"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "yaml"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "toml"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "dataSource",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "direct"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "url"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "external"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "externalData",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "address",
              "docs": [],
              "type": { "kind": "publicKeyTypeNode" }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "offset",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u32",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "length",
              "docs": [],
              "type": {
                "kind": "zeroableOptionTypeNode",
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            }
          ]
        }
      }
    ],
    "errors": []
  },
  "additionalPrograms": []
}
